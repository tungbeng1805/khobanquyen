@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Starts at zero
// Another grid mixin that ensures the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}


// ADDS A BROWSER PREFIX TO THE PROPERTY
@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -o-#{$property}: #{$value};
  #{$property}: #{$value};
}

// BACKGROUND GRADIENT
@mixin background-gradient-button($rotate, $color1, $color2, $color3) {
  background-image: -webkit-linear-gradient($rotate, $color1, $color2, $color3);
  background-image:    -moz-linear-gradient($rotate, $color1, $color2, $color3);
  background-image:     -ms-linear-gradient($rotate, $color1, $color2, $color3);
  background-image:      -o-linear-gradient($rotate, $color1, $color2, $color3);
  background-image:         linear-gradient($rotate, $color1, $color2, $color3);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}
@mixin background-gradient-rotate($rotate, $startColor, $endColor) {
  background-image: -webkit-linear-gradient($rotate, $startColor, $endColor);
  background-image:    -moz-linear-gradient($rotate, $startColor, $endColor);
  background-image:     -ms-linear-gradient($rotate, $startColor, $endColor);
  background-image:      -o-linear-gradient($rotate, $startColor, $endColor);
  background-image:         linear-gradient($rotate, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}
@mixin background-gradient-top($startColor: #ffb400, $endColor: #f9a33a) {
  background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(to top, $startColor, $endColor);
  background-image:    -moz-linear-gradient(to top, $startColor, $endColor);
  background-image:     -ms-linear-gradient(to top, $startColor, $endColor);
  background-image:      -o-linear-gradient(to top, $startColor, $endColor);
  background-image:         linear-gradient(to top, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}
@mixin background-gradient-bottom($startColor: #ffb400, $endColor: #f9a33a) {
  background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(to bottom, $startColor, $endColor);
  background-image:    -moz-linear-gradient(to bottom, $startColor, $endColor);
  background-image:     -ms-linear-gradient(to bottom, $startColor, $endColor);
  background-image:      -o-linear-gradient(to bottom, $startColor, $endColor);
  background-image:         linear-gradient(to bottom, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

// BACKGROUND HORIZONTAL
@mixin background-horizontal($startColor: #ffb400, $endColor: #f9a33a) {
  background-color: $startColor;
  background-image: -webkit-gradient(linear, right top, left top, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(to right, $startColor, $endColor);
  background-image:    -moz-linear-gradient(to right, $startColor, $endColor);
  background-image:     -ms-linear-gradient(to right, $startColor, $endColor);
  background-image:      -o-linear-gradient(to right, $startColor, $endColor);
  background-image:         linear-gradient(to right, $startColor, $endColor);
  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');
}

// BACKGROUND RADIAL
@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {
  background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));
  background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
  background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}

// BACKGROUND SIZE
@mixin background-size($width: 100%, $height: $width) {
  @if type-of($width) == 'number' and $height != null {
    @include css3-prefix('background-size', $width $height);
  } @else {
    @include css3-prefix('background-size', $width);
  }
}

// BACKGROUND COLOR OPACITY
@mixin background-opacity($color: #000, $opacity: 0.85) {
  background: $color;
  background: rgba($color, $opacity);
}

// BORDER RADIUS
@mixin border-radius($radius: 5px) {
  @include css3-prefix('border-radius', $radius);
}

@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
  -webkit-border-top-left-radius:     $topLeftRadius;
  -webkit-border-top-right-radius:    $topRightRadius;
  -webkit-border-bottom-right-radius: $bottomRightRadius;
  -webkit-border-bottom-left-radius:  $bottomLeftRadius;

  -moz-border-radius-topleft:     $topLeftRadius;
  -moz-border-radius-topright:    $topRightRadius;
  -moz-border-radius-bottomright: $bottomRightRadius;
  -moz-border-radius-bottomleft:  $bottomLeftRadius;

  border-top-left-radius:     $topLeftRadius;
  border-top-right-radius:    $topRightRadius;
  border-bottom-right-radius: $bottomRightRadius;
  border-bottom-left-radius:  $bottomLeftRadius;
}

// BOX
@mixin box($orient: horizontal, $pack: center, $align: center) {
  display: -webkit-box;
  display: -moz-box;
  display: box;

  @include css3-prefix('box-orient', $orient);
  @include css3-prefix('box-pack', $pack);
  @include css3-prefix('box-align', $align);
}

// BOX RGBA
@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
  background-color: transparent;
  background-color: rgba($r, $g, $b, $opacity);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');
  zoom:   1;
}


// BOX SHADOW
@mixin box-shadow($x) {
  @include css3-prefix('box-shadow', $x);
}

// BOX SIZING
@mixin box-sizing($type: border-box) {
  @include css3-prefix('box-sizing', $type);
}

// COLUMNS
@mixin columns($count: 3, $gap: 10) {
  @include css3-prefix('column-count', $count);
  @include css3-prefix('column-gap', $gap);
}

// DOUBLE BORDERS
@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {
  border: 1px solid $colorOne;

  @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);

  @include border-radius( $radius );
}

// FLEX
@mixin flex($value: 1) {
  @include css3-prefix('box-flex', $value);
}

// FLIP
@mixin flip($scaleX: -1) {
  @include css3-prefix('transform', scaleX($scaleX));
  filter:            FlipH;
  -ms-filter:        "FlipH";
}

// FONT FACE
@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {
  font-family: $fontFamily;
  src: url($eotFileSrc)  format('eot'),
  url($woffFileSrc) format('woff'),
  url($ttfFileSrc)  format('truetype'),
  url($svgFileSrc + $svgFontID) format('svg');
}

// OPACITY
@mixin opacity($opacity: 0.5) {
  $opacityMultiplied: ($opacity * 100);

  filter:         alpha(opacity=$opacityMultiplied);
  -ms-filter:     "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
  @include css3-prefix('opacity', $opacity);
}


// OUTLINE RADIUS
@mixin outline-radius($radius: 5px) {
  @include css3-prefix('outline-radius', $radius);
}

// RESIZE
@mixin resize($direction: both) {
  @include css3-prefix('resize', $direction);
}

// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
  @include css3-prefix('transform', rotate($deg + deg));
  filter: progid:DXImageTransform.Microsoft.Matrix(
    M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
  zoom: 1;
}

// TEXT SHADOW
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
  text-shadow: $x $y $blur $color;
}

// TRANSFORM
@mixin transform($params) {
  @include css3-prefix('transform', $params);
}

// TRANSFORM STYLE
@mixin transform-style($style: preserve-3d) {
  @include css3-prefix('transform-style', $style);
}

// TRANSITION
@mixin transition($properties...) {

  @if length($properties) >= 1 {
    @include css3-prefix('transition', $properties);
  }

  @else {
    @include css3-prefix('transition', $what: all, $length: 1s, $easing: ease-in-out);
  }
}

// TRIPLE BORDERS
@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
  border: 1px solid $colorOne;

  @include border-radius($radius);

  @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo, 0 0 0 2px $colorThree);
}

// KEYFRAMES
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

// ANIMATION
@mixin animation($str) {
  @include css3-prefix('animation', $str);
}


// ThemeAmber
// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
  font-size: ($sizeValue * 16) * 1px;
  font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Clearfix
@mixin clearfix() {
  content: "";
  display: table;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
  clear: both;
}

$max-3xs: "screen and (max-width: 360px)";
$max-xsx: "screen and (max-width: 480px)";
$max-xs: "screen and (max-width: 575px)";
$max-sm: "screen and (max-width: 767px)";
$max-md: "screen and (max-width: 991px)";
$max-md2: "screen and (max-width: 1024px)";
$max-lg: "screen and (max-width: 1199px)";
$max-lg2: "screen and (max-width: 1260px)";
$max-lg3: "screen and (max-width: 1280px)";
$max-xl: "screen and (max-width: 1400px)";
$max-xxl: "screen and (max-width: 1600px)";
$max-xxx: "screen and (max-width: 1900px)";

$min-sm: "screen and (min-width: 576px)";
$min-md: "screen and (min-width: 768px)";
$min-lg: "screen and (min-width: 992px)";
$min-lg2: "screen and (min-width: 1025px)";
$min-xl: "screen and (min-width: 1200px)";
$min-xl2: "screen and (min-width: 1260px)";
$min-xxl: "screen and (min-width: 1400px)";
$min-xxf: "screen and (min-width: 2200px)";

$mm-sm: "(min-width: 576px) and (max-width: 767px)";
$mm-xtr: "(min-width: 576px) and (max-width: 991px)";
$mm-md: "(min-width: 768px) and (max-width: 991px)";
$mm-lg: "(min-width: 992px) and (max-width: 1199px)";
$mm-lg2: "(min-width: 992px) and (max-width: 1280px)";
$mm-lg3: "(min-width: 768px) and (max-width: 1199px)";
$mm-lg4: "(min-width: 768px) and (max-width: 1400px)";
$mm-xl: "(min-width: 1200px) and (max-width: 1400px)";
$mm-xl2: "(min-width: 992px) and (max-width: 1400px)";

/* Set Font Default */
@mixin ft_theme_default($ft_theme_default) {
  @if ($ft_theme_default == 'Inter') {
    font-family: "Inter", sans-serif;
  } @else {
    font-family: $ft_theme_google, sans-serif;;
  }
}


@keyframes pxl_move1 {
  0% {
    transform: translate(0%,0%);
  }
  25% {
    transform: translate(10%,10%);
  }
  50% {
    transform: translate(10%,-10%);
  }
  75% {
    transform: translate(-10%,10%);
  }
  100% {
    transform: translate(0%);
  }
}
@-webkit-keyframes pxl_move1 {
  0% {
    transform: translate(0%,0%);
  }
  25% {
    transform: translate(10%,10%);
  }
  50% {
    transform: translate(10%,-10%);
  }
  75% {
    transform: translate(-10%,10%);
  }
  100% {
    transform: translate(0%);
  }
}

@keyframes blink  {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
 
@keyframes scale {
  0% {
    transform:scale(1);
  }
  50% {
    transform:scale(.8);
  }
  100% {
    transform:scale(1);
  }
}

@-webkit-keyframes scale {
  0% {
    transform:scale(1);
  }
  50% {
    transform:scale(.8);
  }
  100% {
    transform:scale(1);
  }
}

@keyframes pxl_scale1 {
  0% {
    transform: scale(1);
    opacity: 0.67;
  }
  100% {
    transform: scale(2.2);
    opacity: 0;
  }
}

@-webkit-keyframes pxl_scale1 {
  0% {
    transform: scale(1);
    opacity: 0.67;
  }
  100% {
    transform: scale(2.2);
    opacity: 0;
  }
}

@-ms-keyframes pxl_spin {
  from { -ms-transform: rotate(0deg); }
  to { -ms-transform: rotate(360deg); }
}
@-moz-keyframes pxl_spin {
  from { -moz-transform: rotate(0deg); }
  to { -moz-transform: rotate(360deg); }
}
@-webkit-keyframes pxl_spin {
  from { -webkit-transform: rotate(0deg); }
  to { -webkit-transform: rotate(360deg); }
}
@keyframes pxl_spin {
  from {
    transform:rotate(0deg);
  }
  to {
    transform:rotate(360deg);
  }
}

.pxl-image-spin {
  animation: pxl_spin_reverse 12s linear infinite;
}

@-ms-keyframes pxl_spin_reverse {
  from { -ms-transform: translate(-50%, -50%) rotate(0deg); }
  to { -ms-transform: translate(-50%, -50%) rotate(-360deg); }
}
@-moz-keyframes pxl_spin_reverse {
  from { -moz-transform: translate(-50%, -50%) rotate(0deg); }
  to { -moz-transform: translate(-50%, -50%) rotate(-360deg); }
}
@-webkit-keyframes pxl_spin_reverse {
  from { -webkit-transform: translate(-50%, -50%) rotate(0deg); }
  to { -webkit-transform: translate(-50%, -50%) rotate(-360deg); }
}
@keyframes pxl_spin_reverse {
  from {
    transform:translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform:translate(-50%, -50%) rotate(-360deg);
  }
}

@-webkit-keyframes pxl_right_from_left {
  49% {
    -webkit-transform: translate(100%);
  }
  50% {
    opacity: 0;
    -webkit-transform: translate(-100%);
  }
  51% {
    opacity: 1;
  }
}
@-moz-keyframes pxl_right_from_left {
  49% {
    -moz-transform: translate(100%);
  }
  50% {
    opacity: 0;
    -moz-transform: translate(-100%);
  }
  51% {
    opacity: 1;
  }
}
@keyframes pxl_right_from_left {
  49% {
    transform: translate(100%);
  }
  50% {
    opacity: 0;
    transform: translate(-100%);
  }
  51% {
    opacity: 1;
  }
}

@-webkit-keyframes pxl_left_from_right {
  49% {
    -webkit-transform: translate(-100%);
  }
  50% {
    opacity: 0;
    -webkit-transform: translate(100%);
  }
  51% {
    opacity: 1;
  }
}
@-moz-keyframes pxl_left_from_right {
  49% {
    -moz-transform: translate(-100%);
  }
  50% {
    opacity: 0;
    -moz-transform: translate(100%);
  }
  51% {
    opacity: 1;
  }
}
@keyframes pxl_left_from_right {
  49% {
    transform: translate(-100%);
  }
  50% {
    opacity: 0;
    transform: translate(100%);
  }
  51% {
    opacity: 1;
  }
}

@-webkit-keyframes pxl_ani1 {
  from {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }

  to {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
}

@keyframes pxl_ani1 {
  from {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }

  to {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
}

@-webkit-keyframes pxl_ani2 {
  from {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }

  to {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }
}

@keyframes pxl_ani2 {
  from {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }

  to {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }
}

@keyframes pxl_bounce {
 0%, 100%, 20%, 50%, 80% {
  -webkit-transform: translateY(0);
  -ms-transform:     translateY(0);
  transform:         translateY(0)
}
40% {
  -webkit-transform: translateY(-8px);
  -ms-transform:     translateY(-8px);
  transform:         translateY(-8px)
}
60% {
  -webkit-transform: translateY(-4px);
  -ms-transform:     translateY(-4px);
  transform:         translateY(-4px)
}
}

@keyframes pxl_zigzag {
 0%, 100%, 20%, 50%, 80% {
  -webkit-transform: translateY(0);
  -ms-transform:     translateY(0);
  transform:         translateY(0)
}
40% {
  -webkit-transform: rotate(10deg);
  -ms-transform:     rotate(10deg);
  transform:         rotate(10deg)
}
60% {
  -webkit-transform: rotate(-10deg);
  -ms-transform:     rotate(-10deg);
  transform:         rotate(-10deg)
}
}

@keyframes pxl_right_left {
  0% {
    transform: translateX(0px);
  }
  25% {
    transform: translateX(40px);
  }
  50% {
    transform: translateX(0px);
  }
  75% {
    transform: translateX(-40px);
  }
  100% {
    transform: translateX(0px);
  }
}

.slide-right-to-left {
  animation: pxl_right_left 12s ease-out infinite;
  -webkit-animation: pxl_right_left 12s ease-out infinite;
}

@keyframes pxl_left_right {
  0% {
    transform: translateX(0px);
  }
  25% {
    transform: translateX(-40px);
  }
  50% {
    transform: translateX(0px);
  }
  75% {
    transform: translateX(40px);
  }
  100% {
    transform: translateX(0px);
  }
}



.slide-left-to-right {
  animation: pxl_left_right 12s ease-out infinite;
  -webkit-animation: pxl_left_right 12s ease-out infinite;
}

@keyframes pxl_bottom_top_small {
  0% {
    transform: translateX(0px);
  }
  25% {
    transform: translateY(10px);
  }
  50% {
    transform: translateY(0px);
  }
  75% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes pxl_bottom_top {
  0% {
    transform: translateX(0px);
  }
  25% {
    transform: translateY(40px);
  }
  50% {
    transform: translateY(0px);
  }
  75% {
    transform: translateY(-40px);
  }
  100% {
    transform: translateY(0px);
  }
}

.slide-bottom-to-top {
  animation: pxl_bottom_top 12s ease-out infinite;
  -webkit-animation: pxl_bottom_top 12s ease-out infinite;
}

@keyframes pxl_effect1 {
  0%{
    transform:translate(0px,0px)
  }
  20%{
    transform:translate(40px,-5px)
  }
  40%{
    transform:translate(60px,40px)
  }
  60%{
    transform:translate(40px,60px)
  }
  80%{
    transform:translate(-40px,60px)
  }
  100%{
    transform:translate(0px,0px)
  }
}

.slide-effect1 {
  animation: pxl_effect1 12s ease-out infinite;
  -webkit-animation: pxl_effect1 12s ease-out infinite;
}

@keyframes pxl_effect2 {
  0%{
    transform:translate(0px,0px)
  }
  20%{
    transform:translate(-30px,40px)
  }
  40%{
    transform:translate(60px,60px)
  }
  60%{
    transform:translate(70px,40px)
  }
  80%{
    transform:translate(40px,-70px)
  }
  100%{
    transform:translate(0px,0px)
  }
}

.slide-effect2 {
  animation: pxl_effect2 12s ease-out infinite;
  -webkit-animation: pxl_effect2 12s ease-out infinite;
}

@keyframes pxl_top_bottom {
  0% {
    transform: translateX(0px);
  }
  25% {
    transform: translateY(-20px);
  }
  50% {
    transform: translateY(0px);
  }
  75% {
    transform: translateY(20px);
  }
  100% {
    transform: translateY(0px);
  }
}
@-webkit-keyframes toBottomFromTop {
  49% {
    -webkit-transform: translateY(-100%);
  }
  50% {
    opacity: 0;
    -webkit-transform: translateY(100%);
  }
  51% {
    opacity: 1;
  }
}
@-moz-keyframes toBottomFromTop {
  49% {
    -moz-transform: translateY(-100%);
  }
  50% {
    opacity: 0;
    -moz-transform: translateY(100%);
  }
  51% {
    opacity: 1;
  }
}
@keyframes toBottomFromTop {
  49% {
    transform: translateY(-100%);
  }
  50% {
    opacity: 0;
    transform: translateY(100%);
  }
  51% {
    opacity: 1;
  }
}
.slide-top-to-bottom {
  animation: pxl_top_bottom 12s ease-out infinite;
  -webkit-animation: pxl_top_bottom 12s ease-out infinite;
}

@-webkit-keyframes img_circle {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 1;
  }
  100% {
    width: 200%;
    height: 200%;
    opacity: 0;
  }
}
@keyframes img_circle {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 1;
  }
  100% {
    width: 200%;
    height: 200%;
    opacity: 0;
  }
}

@-webkit-keyframes pxl_loader_bounce {
  0%, 100% { -webkit-transform: scale(0.0) }
  50% { -webkit-transform: scale(1.0) }
}

@keyframes pxl_loader_bounce {
  0%, 100% { 
    transform: scale(0.0);
    -webkit-transform: scale(0.0);
  } 50% { 
    transform: scale(1.0);
    -webkit-transform: scale(1.0);
  }
}
@-webkit-keyframes pxl_scale1 {
  0% {
    transform:scale(1);
  }
  50% {
    transform:scale(0);
  }
  100% {
    transform:scale(1);
  }
}

@keyframes pxl_scale1 {
  0% {
    transform:scale(1);
  }
  50% {
    transform:scale(0);
  }
  100% {
    transform:scale(1);
  }
}
.pxl_scale1 {
  animation: pxl_scale1 400ms linear 0ms ;
  -webkit-animation: pxl_scale1 400ms linear 0ms ;
}
@mixin scale($params) {
  @include transform(scale($params));
}
@mixin transform_scale($size: 1) {
  transform: scale($size);
  -ms-transform: scale($size);
  -webkit-transform: scale($size);
}

@keyframes ar {
  33% {
    transform:translatex(20px);
    opacity: 0;
  }
  66% {
    transform:translatex(-20px);
    opacity: 0;
  }
  100% {
    transform:translatex(0px);
    opacity: 1;
  }
}
/* Animation */
@keyframes worm1 {
  from {
    stroke-dashoffset: 0;
  }
  50% {
    animation-timing-function: steps(1);
    stroke-dashoffset: -358;
  }
  50.01% {
    animation-timing-function: linear;
    stroke-dashoffset: 358;
  }
  to {
    stroke-dashoffset: 0;
  }
}
@keyframes worm2 {
  from {
    stroke-dashoffset: 358;
  }
  50% {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: -358;
  }
}

/* Animation */
@keyframes ring {
  from {
    stroke-dasharray: 0 257 0 0 1 0 0 258;
  }
  25% {
    stroke-dasharray: 0 0 0 0 257 0 258 0;
  }
  50%, to {
    stroke-dasharray: 0 0 0 0 0 515 0 0;
  }
}
@keyframes ball {
  from, 50% {
    animation-timing-function: ease-in;
    stroke-dashoffset: 1;
  }
  64% {
    animation-timing-function: ease-in;
    stroke-dashoffset: -109;
  }
  78% {
    animation-timing-function: ease-in;
    stroke-dashoffset: -145;
  }
  92% {
    animation-timing-function: ease-in;
    stroke-dashoffset: -157;
  }
  57%, 71%, 85%, 99%, to {
    animation-timing-function: ease-out;
    stroke-dashoffset: -163;
  }
}

@-webkit-keyframes ripple {
  0% {
    box-shadow: 0 0 0 0 rgba(255,255,255, 0.3), 0 0 0 1em rgba(255,255,255, 0.3), 0 0 0 3em rgba(255,255,255, 0.3), 0 0 0 5em rgba(255,255,255, 0.3);
  }
  100% {
    box-shadow: 0 0 0 1em rgba(255,255,255, 0.3), 0 0 0 3em rgba(255,255,255, 0.3), 0 0 0 5em rgba(255,255,255, 0.3), 0 0 0 8em rgba(255,255,255, 0.0000001);
  }
}

@keyframes ripple {

  0% {
    box-shadow: 0 0 0 0 rgba(255,255,255, 0.3), 0 0 0 1em rgba(255,255,255, 0.3), 0 0 0 3em rgba(255,255,255, 0.3), 0 0 0 5em rgba(255,255,255, 0.3);
  }
  100% {
    box-shadow: 0 0 0 1em rgba(255,255,255, 0.3), 0 0 0 3em rgba(255,255,255, 0.3), 0 0 0 5em rgba(255,255,255, 0.3), 0 0 0 8em rgba(255,255,255, 0.0000001);
  }
}


@-webkit-keyframes in-top {
  from {-webkit-transform: perspective(500px) rotateX(-90deg); opacity:1}
  to   {-webkit-transform: perspective(500px) rotateX(0deg);}
}
@keyframes in-top {
  from {transform: perspective(500px) rotateX(-90deg); opacity:1}
  to   {transform: perspective(500px) rotateX(0deg);}
}

@-webkit-keyframes out-top {
  from {-webkit-transform: perspective(500px) rotateX(0deg); opacity:1}
  to   {-webkit-transform: perspective(500px) rotateX(-90deg); opacity:1}
}
@keyframes out-top {
  from {transform: perspective(500px) rotateX(0deg); opacity:1}
  to   {transform: perspective(500px) rotateX(-90deg); opacity:1}
}

@-webkit-keyframes in-bottom {
  from {-webkit-transform: perspective(500px) rotateX(90deg); opacity:1}
  to   {-webkit-transform: perspective(500px) rotateX(0deg);}
}
@keyframes in-bottom {
  from {transform: perspective(500px) rotateX(90deg); opacity:1}
  to   {transform: perspective(500px) rotateX(0deg);}
}

@-webkit-keyframes out-bottom {
  from {-webkit-transform: perspective(500px) rotateX(0deg); opacity:1}
  to   {-webkit-transform: perspective(500px) rotateX(90deg); opacity:1}
}
@keyframes out-bottom {
  from {transform: perspective(500px) rotateX(0deg); opacity:1}
  to   {transform: perspective(500px) rotateX(90deg); opacity:1}
}

@-webkit-keyframes in-left {
  from {-webkit-transform: perspective(500px) rotateY(90deg); opacity:1}
  to   {-webkit-transform: perspective(500px) rotateY(0deg);}
}
@keyframes in-left {
  from {transform: perspective(500px) rotateY(90deg); opacity:1}
  to   {transform: perspective(500px) rotateY(0deg);}
}

@-webkit-keyframes out-left {
  from {-webkit-transform: perspective(500px) rotateY(0deg); opacity:1}
  to   {-webkit-transform: perspective(500px) rotateY(90deg); opacity:1}
}
@keyframes out-left {
  from {transform: perspective(500px) rotateY(0deg); opacity:1}
  to   {transform: perspective(500px) rotateY(90deg); opacity:1}
}

@-webkit-keyframes in-right {
  from {-webkit-transform: perspective(500px) rotateY(-90deg); opacity:1}
  to   {-webkit-transform: perspective(500px) rotateY(0deg);}
}
@keyframes in-right {
  from {transform: perspective(500px) rotateY(-90deg); opacity:1}
  to   {transform: perspective(500px) rotateY(0deg);}
}

@-webkit-keyframes out-right {
  from {-webkit-transform: perspective(500px) rotateY(0deg); opacity:1}
  to   {-webkit-transform: perspective(500px) rotateY(-90deg); opacity:1}
}
@keyframes out-right {
  from {transform: perspective(500px) rotateY(0deg); opacity:1}
  to   {transform: perspective(500px) rotateY(-90deg); opacity:1}
}
@keyframes shakeicon {
  33% {
    @include transform(rotateZ(20deg));
  }
  67% {
    @include transform(rotateZ(-20deg));
  }
  100% {
    @include transform(rotateZ(20deg));
  }
}

@-webkit-keyframes tada {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }

  10%, 20% {
    -webkit-transform: scale(0.9) rotate(-5deg);
    transform: scale(0.9) rotate(-5deg);
  }

  50%, 50%, 70%, 90% {
    -webkit-transform: scale(1.1) rotate(5deg);
    transform: scale(1.1) rotate(5deg);
  }

  40%, 60%, 80% {
    -webkit-transform: scale(1.1) rotate(-5deg);
    transform: scale(1.1) rotate(-5deg);
  }

  100% {
    -webkit-transform: scale(1) rotate(0);
    transform: scale(1) rotate(0);
  }
}

@keyframes tada {
  0% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
  }

  10%, 20% {
    -webkit-transform: scale(0.9) rotate(-5deg);
    -ms-transform: scale(0.9) rotate(-5deg);
    transform: scale(0.9) rotate(-5deg);
  }

  50%, 50%, 70%, 90% {
    -webkit-transform: scale(1.1) rotate(5deg);
    -ms-transform: scale(1.1) rotate(5deg);
    transform: scale(1.1) rotate(5deg);
  }

  40%, 60%, 80% {
    -webkit-transform: scale(1.1) rotate(-5deg);
    -ms-transform: scale(1.1) rotate(-5deg);
    transform: scale(1.1) rotate(-5deg);
  }

  100% {
    -webkit-transform: scale(1) rotate(0);
    -ms-transform: scale(1) rotate(0);
    transform: scale(1) rotate(0);
  }
}


@keyframes icon-bounce {
 0%, 100%, 20%, 50%, 80% {
  -webkit-transform: translateY(0);
  -ms-transform:     translateY(0);
  transform:         translateY(0)
}
40% {
  -webkit-transform: translateY(-10px);
  -ms-transform:     translateY(-10px);
  transform:         translateY(-10px)
}
60% {
  -webkit-transform: translateY(-5px);
  -ms-transform:     translateY(-5px);
  transform:         translateY(-5px)
}
}

@-webkit-keyframes icon-bounce {
 0%, 100%, 20%, 50%, 80% {
  -webkit-transform: translateY(0);
  -ms-transform:     translateY(0);
  transform:         translateY(0)
}
40% {
  -webkit-transform: translateY(-10px);
  -ms-transform:     translateY(-10px);
  transform:         translateY(-10px)
}
60% {
  -webkit-transform: translateY(-5px);
  -ms-transform:     translateY(-5px);
  transform:         translateY(-5px)
}
}

@keyframes scale-border {
  1%{transform:scale(1);
    opacity: 0.1;
  }
  100%{transform:scale(3);
    opacity: 0;
  }
}
@-webkit-keyframes scale-border {
  1%{transform:scale(1);
    opacity: 0.1;
  }
  100%{transform:scale(3);
    opacity: 0;
  }
}
@keyframes scale-border2 {
  1%{transform:scale(1);
    opacity: 1;
  }
  100%{transform:scale(2);
    opacity: 0;
  }
}
@-webkit-keyframes scale-border2 {
  1%{transform:scale(1);
    opacity: 1;
  }
  100%{transform:scale(2);
    opacity: 0;
  }
}
