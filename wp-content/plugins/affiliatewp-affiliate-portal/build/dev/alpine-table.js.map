{"version":3,"sources":["webpack://AFFWP.portal.[name]/webpack/bootstrap","webpack://AFFWP.portal.[name]/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://AFFWP.portal.[name]/./node_modules/alpinejs/dist/alpine.js","webpack://AFFWP.portal.[name]/./src/alpine-table/alpine-table.js","webpack://AFFWP.portal.[name]/./src/dom-helpers/dom-helpers.js","webpack://AFFWP.portal.[name]/./src/helpers/helpers.js","webpack://AFFWP.portal.[name]/./src/url-helpers/url-helpers.js","webpack://AFFWP.portal.[name]/external [\"AFFWP\",\"portal\",\"sdk\"]","webpack://AFFWP.portal.[name]/external \"regeneratorRuntime\"","webpack://AFFWP.portal.[name]/external [\"wp\",\"url\"]"],"names":["page","getPage","window","location","href","type","rows","pages","currentPage","nextPage","previousPage","perPage","order","orderby","schema","showPagination","undefined","allowSorting","isLoading","setOrder","orders","currentOrder","findIndex","nextOrder","length","getSortOrder","column","getSchema","find","item","id","urlForPage","args","paginateUrl","getCell","index","cell","schemaColumn","getPageObjects","maxPages","midpoint","Math","round","startPage","endPage","disabled","push","getPages","handleOrderEvent","e","preventDefault","scrollWrapperTo","getContentWrapper","scrollleft","fetchPage","handlePageEvent","skipHistory","number","Promise","res","rej","portalSchemaRows","data","updateUrl","history","pushState","document","title","setupColumns","init","hasQueryArg","getQueryArg","onpopstate","bind","onpushstate","querySelector","x","y","scrollTo","pause","resolve","setTimeout","trailingslashit","input","endsWith","paginationRegex","appendUrl","url","append","startsWith","substr","constructUrl","parts","urlObject","getProtocol","getAuthority","getPath","getQuerystring","queryString","getQueryString","getFragment","reduce","acc","part","isValidUrlPart","includes","toLowerCase","callback","charAt","toUpperCase","slice","urlPart","authoritiesMatch","baseAuthority","inputAuthority","regex","RegExp","test","hasValidProtocol","protocol","path","search","match","replace","urlParts","result","addQueryArgs","validateUrl","getStablePath","splitted","split","query","base","map","entry","sort","a","b","localeCompare","pair","join"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,iH;;;;;;;;;;;ACpCA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACoD;AACtD,CAAC,qBAAqB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU,8FAA8F,UAAU;AACjJ,KAAK;AACL,mDAAmD,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,MAAM,oBAAoB,WAAW;;AAExE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,gFAAgF;AAChF;AACA;AACA;AACA;;AAEA,qGAAqG,cAAc,qBAAqB,WAAW,GAAG;AACtJ,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,wFAAwF;AACxF;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;;AAEA;AACA,2HAA2H,UAAU,WAAW,EAAE;;AAElJ;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,+HAA+H,GAAG,WAAW,EAAE;AAC/I,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;;AAEvF;;AAEA;AACA,oFAAoF;;AAEpF;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD;;AAEzD;AACA,yCAAyC;;AAEzC;AACA,iGAAiG;;AAEjG;AACA,sDAAsD;AACtD,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,uDAAuD;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA,uEAAuE;AACvE;AACA;;AAEA;AACA;AACA;AACA,2DAA2D,8BAA8B;AACzF,OAAO;;AAEP;AACA;AACA;AACA,yCAAyC,4BAA4B;AACrE;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,2DAA2D,+BAA+B;AAC1F,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4HAA4H;;AAE5H;AACA;AACA;AACA;AACA,8GAA8G;;AAE9G;AACA,uEAAuE;;AAEvE,qCAAqC,UAAU;AAC/C;AACA,mEAAmE;AACnE,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA,oGAAoG;;AAEpG;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uFAAuF;;AAEvF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB,iDAAiD;;AAEjD,yDAAyD;AACzD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+FAA+F;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,8EAA8E;;AAE9E;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA,wBAAwB;AACxB,OAAO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,0BAA0B;AAC1B;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA,yCAAyC;AACzC;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU;AACjB;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,0CAA0C;;AAE1C,8DAA8D;AAC9D;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA6C,kBAAkB;AAC/D;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;;AAGL,gDAAgD;;AAEhD,4FAA4F;;AAE5F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,mCAAmC,WAAW;AAC3F;AACA,6CAA6C,kBAAkB;AAC/D;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,UAAU;AACnB,SAAS,+OAA+O;AACxP,SAAS,uDAAuD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,eAAe,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,eAAe,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,gBAAgB,EAAE;AAC/D;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C,iBAAiB,eAAe;AAChC,iBAAiB,eAAe;AAChC;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,gBAAgB,EAAE;AAC/D;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kEAAkE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,KAAK;AACnD;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA,gDAAgD,qBAAqB;AACrE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAiE;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,iEAAiE;AACjE;;AAEA,8EAA8E;AAC9E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,WAAW;AACX,SAAS;;;AAGT;AACA;AACA,OAAO;AACP;;AAEA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA,mDAAmD;AACnD;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO,0BAA0B;AACjC;AACA,OAAO,EAAE;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iEAAiE;AACjE,mFAAmF,kBAAkB;AACrG;AACA,OAAO;AACP;;AAEA,kEAAkE;AAClE,2FAA2F,kBAAkB;AAC7G;AACA,OAAO;AACP;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;AACA,2EAA2E;AAC3E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,EAAE;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC55DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA,IAAMA,IAAI,GAAGC,+EAAO,CAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAlB,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe;AAEd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,MAAI,EAAE,EAZQ;;AAcd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,MAAI,EAAE,EAxBQ;;AA0Bd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,OAAK,EAAE,CApCO;;AAsCd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,aAAW,EAAER,IAhDC;;AAkDd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCS,UAAQ,EAAET,IAAI,GAAG,CA5DH;;AA8Dd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCU,cAAY,EAAEV,IAAI,IAAI,CAAR,GAAYA,IAAI,GAAG,CAAnB,GAAuB,CAxEvB;;AA0Ed;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCW,SAAO,EAAE,EApFK;;AAsFd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,OAAK,EAAE,KAhGO;;AAkGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,SAAO,EAAE,KA5GK;;AA8Gd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,QAAM,EAAE,EAxHM;;AA0Hd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,gBAAc,EAAEC,SApIF;;AAsId;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,cAAY,EAAE,IAhJA;;AAkJd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,WAAS,EAAE,IA5JG;;AA8Jd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,UAzKc,oBAyKJN,OAzKI,EAyKM;AAAA;;AACnB,QAAMO,MAAM,GAAG,CACd,KADc,EAEd,KAFc,EAGd,MAHc,CAAf;;AAMA,QAAIP,OAAO,KAAK,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","file":"alpine-table.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/alpine-table/alpine-table.js\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Alpine = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    return Array.from(new Set(array));\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function checkedAttrLooseCompare(valueA, valueB) {\n    return valueA == valueB;\n  }\n  function warnIfMalformedTemplate(el, directive) {\n    if (el.tagName.toLowerCase() !== 'template') {\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\n    } else if (el.content.childElementCount !== 1) {\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with an unexpected number of root elements. Make sure <template> has a single root element. `);\n    }\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function camelCase(subject) {\n    return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  const handleError = (el, expression, error) => {\n    console.warn(`Alpine Error: \"${error}\"\\n\\nExpression: \"${expression}\"\\nElement:`, el);\n\n    if (!isTesting()) {\n      Object.assign(error, {\n        el,\n        expression\n      });\n      throw error;\n    }\n  };\n\n  function tryCatch(cb, {\n    el,\n    expression\n  }) {\n    try {\n      const value = cb();\n      return value instanceof Promise ? value.catch(e => handleError(el, expression, e)) : value;\n    } catch (e) {\n      handleError(el, expression, e);\n    }\n  }\n\n  function saferEval(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return expression.call(dataContext);\n      }\n\n      return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\n    }, {\n      el,\n      expression\n    });\n  }\n  function saferEvalNoReturn(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\n      }\n\n      let AsyncFunction = Function;\n      /* MODERN-ONLY:START */\n\n      AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n      /* MODERN-ONLY:END */\n      // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n      // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n\n      if (Object.keys(dataContext).includes(expression)) {\n        let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n        if (typeof methodReference === 'function') {\n          return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\n        } else {\n          return Promise.resolve();\n        }\n      }\n\n      return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\n    }, {\n      el,\n      expression\n    });\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, component, type) {\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\n\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\n\n    if (spreadDirective) {\n      let spreadObject = saferEval(el, spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\n\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\n        name,\n        value\n      })));\n    }\n\n    if (type) return directives.filter(i => i.type === type);\n    return sortDirectives(directives);\n  }\n\n  function sortDirectives(directives) {\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\n    return directives.sort((a, b) => {\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n    });\n  }\n\n  function parseHtmlAttribute({\n    name,\n    value\n  }) {\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\n    const typeMatch = normalizedName.match(xAttrRE);\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\-:]+)/);\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace('.', '')),\n      expression: value\n    };\n  }\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function convertClassStringToArray(classList, filterFn = Boolean) {\n    return classList.split(' ').filter(filterFn);\n  }\n  const TRANSITION_TYPE_IN = 'in';\n  const TRANSITION_TYPE_OUT = 'out';\n  const TRANSITION_CANCELLED = 'cancelled';\n  function transitionIn(el, show, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\n      transitionClassesIn(el, component, attrs, show, reject);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return hide();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\n      transitionClassesOut(el, component, attrs, hide, reject);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback, reject) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {\n    // clear the previous transition if exists to avoid caching the wrong styles\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    } // If the user set these style values, we'll put them back when we're done with them.\n\n\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n\n  const ensureStringExpression = (expression, el, component) => {\n    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\n  };\n\n  function transitionClassesIn(el, component, directives, showCallback, reject) {\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression, el, component));\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression, el, component));\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);\n  }\n  function transitionClassesOut(el, component, directives, hideCallback, reject) {\n    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {\n    // clear the previous transition if exists to avoid caching the wrong classes\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    }\n\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n  function transition(el, stages, type, reject) {\n    const finish = once(() => {\n      stages.hide(); // Adding an \"isConnected\" check, in case the callback\n      // removed the element from the DOM.\n\n      if (el.isConnected) {\n        stages.cleanup();\n      }\n\n      delete el.__x_transition;\n    });\n    el.__x_transition = {\n      // Set transition type so we can avoid clearing transition if the direction is the same\n      type: type,\n      // create a callback for the last stages of the transition so we can call it\n      // from different point and early terminate it. Once will ensure that function\n      // is only called one time.\n      cancel: once(() => {\n        reject(TRANSITION_CANCELLED);\n        finish();\n      }),\n      finish,\n      // This store the next animation frame so we can cancel it\n      nextFrame: null\n    };\n    stages.start();\n    stages.during();\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n\n      if (duration === 0) {\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\n      }\n\n      stages.show();\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(el.__x_transition.finish, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !Array.isArray(subject) && !isNaN(subject);\n  } // Thanks @vuejs\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\n\n  function once(callback) {\n    let called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        callback.apply(this, arguments);\n      }\n    };\n  }\n\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(templateEl, 'x-for');\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n    let currentEl = templateEl;\n    items.forEach((item, index) => {\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\n\n      if (!nextEl) {\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\n\n        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);\n        nextEl.__x_for = iterationScopeVariables;\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\n      } else {\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\n        delete nextEl.__x_for_key;\n        nextEl.__x_for = iterationScopeVariables;\n        component.updateElements(nextEl, () => nextEl.__x_for);\n      }\n\n      currentEl = nextEl;\n      currentEl.__x_for_key = currentKey;\n    });\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseForExpression(expression) {\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    let stripParensRE = /^\\(|\\)$/g;\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    let inMatch = String(expression).match(forAliasRE);\n    if (!inMatch) return;\n    let res = {};\n    res.items = inMatch[2].trim();\n    let item = inMatch[1].trim().replace(stripParensRE, '');\n    let iteratorMatch = item.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.item = item.replace(forIteratorRE, '').trim();\n      res.index = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.collection = iteratorMatch[2].trim();\n      }\n    } else {\n      res.item = item;\n    }\n\n    return res;\n  }\n\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\n    // We must create a new object, so each iteration has a new scope\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\n    scopeVariables[iteratorNames.item] = item;\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n    return scopeVariables;\n  }\n\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\n\n    if (!bindKeyAttribute) return index;\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\n  }\n\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\n\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\n      return [];\n    }\n\n    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.\n\n    if (isNumeric(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), i => i + 1);\n    }\n\n    return items;\n  }\n\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\n    let clone = document.importNode(templateEl.content, true);\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\n    return currentEl.nextElementSibling;\n  }\n\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\n    if (!nextEl) return; // If we are already past the x-for generated elements, we don't need to look ahead.\n\n    if (nextEl.__x_for_key === undefined) return; // If the the key's DO match, no need to look ahead.\n\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\n    // If we find it, we'll move it to the current position in the loop.\n\n    let tmpNextEl = nextEl;\n\n    while (tmpNextEl) {\n      if (tmpNextEl.__x_for_key === currentKey) {\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\n      }\n\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\n    }\n  }\n\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      }, () => {}, component);\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\n\n      if (value === undefined && String(expression).match(/\\./)) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\n        // If there are any initial state values, radio will have a correct\n        // \"checked\" value since x-bind:value is processed before x-model.\n        if (el.attributes.value === undefined && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          el.checked = checkedAttrLooseCompare(el.value, value);\n        }\n      } else if (el.type === 'checkbox') {\n        // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {\n          el.value = String(value);\n        } else if (attrType !== 'bind') {\n          if (Array.isArray(value)) {\n            // I'm purposely not using Array.includes here because it's\n            // strict, and because of Numeric/String mis-casting, I\n            // want the \"includes\" to be \"fuzzy\".\n            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\n          } else {\n            el.checked = !!value;\n          }\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        if (el.value === value) return;\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        // Sorting the keys / class names by their boolean value will ensure that\n        // anything that evaluates to `false` and needs to remove classes is run first.\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\n        keysSortedByBooleanValue.forEach(classNames => {\n          if (value[classNames]) {\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\n          } else {\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = value ? convertClassStringToArray(value) : [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else {\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\n\n      if ([null, undefined, false].includes(value)) {\n        el.removeAttribute(attrName);\n      } else {\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\n      }\n    }\n  }\n\n  function setIfChanged(el, attrName, value) {\n    if (el.getAttribute(attrName) != value) {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleTextDirective(el, output, expression) {\n    // If nested model key is undefined, set the default value to empty string.\n    if (output === undefined && String(expression).match(/\\./)) {\n      output = '';\n    }\n\n    el.textContent = output;\n  }\n\n  function handleHtmlDirective(component, el, expression, extraVars) {\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n      el.__x_is_shown = false;\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n\n      el.__x_is_shown = true;\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = (resolve, reject) => {\n      if (value) {\n        if (el.style.display === 'none' || el.__x_transition) {\n          transitionIn(el, () => {\n            show();\n          }, reject, component);\n        }\n\n        resolve(() => {});\n      } else {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          }, reject, component);\n        } else {\n          resolve(() => {});\n        }\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish(), () => {});\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    }\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(el, 'x-if');\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n      el.nextElementSibling.__x_inserted_me = true;\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, () => {}, component, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    const options = {\n      passive: modifiers.includes('passive')\n    };\n\n    if (modifiers.includes('camel')) {\n      event = camelCase(event);\n    }\n\n    let handler, listenerTarget;\n\n    if (modifiers.includes('away')) {\n      listenerTarget = document;\n\n      handler = e => {\n        // Don't do anything if the click came from the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler, options);\n        }\n      };\n    } else {\n      listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler, options);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\n        // the target element matches the element we are registering the\n        // event on, run the handler\n\n        if (!modifiers.includes('self') || e.target === el) {\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\n          returnValue.then(value => {\n            if (value === false) {\n              e.preventDefault();\n            } else {\n              if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler, options);\n              }\n            }\n          });\n        }\n      };\n    }\n\n    if (modifiers.includes('debounce')) {\n      let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n      let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n      handler = debounce(handler, wait);\n    }\n\n    listenerTarget.addEventListener(event, handler, options);\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return key && kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle its value inside the array.\n        if (Array.isArray(currentValue)) {\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  function safeParseNumber(rawValue) {\n    const number = rawValue ? parseFloat(rawValue) : null;\n    return isNumeric(number) ? number : rawValue;\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, componentForClone = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      let dataExtras = {\n        $el: this.$el\n      };\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(dataExtras, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(el, dataExpression, dataExtras);\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      };\n      /* MODERN-ONLY:START */\n      // We remove this piece of code from the legacy build.\n      // In IE11, we have already defined our helpers at this point.\n      // Register custom magic properties.\n\n\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(this.unobservedData, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference, this.$el);\n          }\n        });\n      });\n      /* MODERN-ONLY:END */\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !componentForClone) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n      // If we're cloning a component, the third parameter ensures no duplicate\n      // event listeners are registered (the mutation observer will take care of them)\n\n\n      this.initializeElements(this.$el, () => {}, componentForClone); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n\n      componentForClone || setTimeout(() => {\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\n      }, 0);\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else if (Array.isArray(target)) {\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\n            // For example, when calling push, we would get a mutation for the item's key\n            // and a second mutation for the length property.\n\n            if (key === 'length') return;\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData[part])) {\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}, componentForClone = false) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\n\n        if (el.__x_inserted_me !== undefined) return false;\n        this.initializeElement(el, extraVars, componentForClone ? false : true);\n      }, el => {\n        if (!componentForClone) el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    initializeElement(el, extraVars, shouldRegisterListeners = true) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\n      }\n\n      shouldRegisterListeners && this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    executeAndClearNextTickStack(el) {\n      // Skip spawns from alpine directives\n      if (el === this.$el && this.nextTickStack.length > 0) {\n        // We run the tick stack after the next frame to allow any\n        // running transitions to pass the initial show stage.\n        requestAnimationFrame(() => {\n          while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()();\n          }\n        });\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(handler => {\n        return new Promise((resolve, reject) => {\n          handler(resolve, reject);\n        });\n      }).reduce((promiseChain, promise) => {\n        return promiseChain.then(() => {\n          return promise.then(finishElement => {\n            finishElement();\n          });\n        });\n      }, Promise.resolve(() => {})).catch(e => {\n        if (e !== TRANSITION_CANCELLED) throw e;\n      }); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el, this).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el, this);\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleTextDirective(el, output, expression);\n            break;\n\n          case 'html':\n            handleHtmlDirective(this, el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.some(i => i.type === 'for')) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const xAttr = mutations[i].target.getAttribute('x-data') || '{}';\n            const rawData = saferEval(this.$el, xAttr, {\n              $el: this.$el\n            });\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]') && !node.__x) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    version: \"2.8.2\",\n    pauseMutationObserver: false,\n    magicProperties: {},\n    onComponentInitializeds: [],\n    onBeforeComponentInitializeds: [],\n    ignoreFocusedForValueBinding: false,\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime();\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        if (this.pauseMutationObserver) return;\n\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        // Wrap in a try/catch so that we don't prevent other components\n        // from initializing when one component contains an error.\n        try {\n          el.__x = new Component(el);\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          }, 0);\n        }\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component);\n      }\n    },\n    addMagicProperty: function addMagicProperty(name, callback) {\n      this.magicProperties[name] = callback;\n    },\n    onComponentInitialized: function onComponentInitialized(callback) {\n      this.onComponentInitializeds.push(callback);\n    },\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\n      this.onBeforeComponentInitializeds.push(callback);\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n","/**\n * Table.\n *\n * Works with pages with tabular data to handle data population, pagination, and filtering.\n *\n * @author Alex Standiford\n * @since 1.0.0\n * @global table\n *\n */\n\n/**\n * External dependencies\n */\nimport 'alpinejs';\n\n/**\n * WordPress dependencies\n */\nimport {hasQueryArg, getQueryArg} from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport {portalSchemaRows} from \"@affiliatewp-portal/sdk\";\nimport {scrollWrapperTo, getContentWrapper} from '@affiliatewp-portal/dom-helpers';\nimport {getPage, paginateUrl} from '@affiliatewp-portal/url-helpers';\n\nconst page = getPage( window.location.href );\n\n/**\n * Table handler for AlpineJS.\n *\n * Works with pages with tabular data to handle data population, pagination, and filtering.\n *\n * @since 1.0.0\n * @access private\n * @global table\n *\n * @returns object The table AlpineJS object.\n */\nexport default {\n\n\t/**\n\t * table type.\n\t *\n\t * Determines what table schema and data should be used. Intended to be extended by\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type string\n\t */\n\ttype: '',\n\n\t/**\n\t * rows.\n\t *\n\t * Array of objects containing the values of each column.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type Array\n\t */\n\trows: [],\n\n\t/**\n\t * pages.\n\t *\n\t * The number of pages to use for pagination.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type int the number of pages.\n\t */\n\tpages: 1,\n\n\t/**\n\t * current page.\n\t *\n\t * The current page for this table.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type int the page number.\n\t */\n\tcurrentPage: page,\n\n\t/**\n\t * next page.\n\t *\n\t * The next page for this table.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type int|undefined The next page, or undefined if there is not a next page.\n\t */\n\tnextPage: page + 1,\n\n\t/**\n\t * previous page.\n\t *\n\t * The previous page for this table.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type int|undefined The next page, or undefined if there is not a previous page.\n\t */\n\tpreviousPage: page >= 1 ? page + 1 : 0,\n\n\t/**\n\t * Per page.\n\t *\n\t * The number of results to display per-page.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type int Results per page\n\t */\n\tperPage: 30,\n\n\t/**\n\t * Order.\n\t *\n\t * Determines the order in which data should be displayed, and retrieved.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type string|boolean can be \"asc\" for ascending, \"desc\" for descending, or false for no sort.\n\t */\n\torder: false,\n\n\t/**\n\t * order by.\n\t *\n\t * Determines which column data should be ordered.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type string|boolean can be any valid column from the schema, or false for no specific order.\n\t */\n\torderby: false,\n\n\t/**\n\t * Table schema.\n\t *\n\t * Dictates the column headers, as well as the data that is displayed in the table.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type array list of table headings.\n\t */\n\tschema: [],\n\n\t/**\n\t * Show Pagination.\n\t *\n\t * Automatically changes based on if pagination should be displayed.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type boolean true if pagination should be displayed, otherwise false.\n\t */\n\tshowPagination: undefined,\n\n\t/**\n\t * Allow Sorting.\n\t *\n\t * Set this to false to disable sorting.\n\t *\n\t * @since 1.0.0\n\t * @access public.\n\t *\n\t * @type boolean true if sorting should be allowed, otherwise false.\n\t */\n\tallowSorting: true,\n\n\t/**\n\t * Is Loading.\n\t *\n\t * Remains true until necessary data has been fetched from the server.\n\t *\n\t * @since  1.0.0\n\t * @access public\n\t *\n\t * @type boolean\n\t */\n\tisLoading: true,\n\n\t/**\n\t * Set Order.\n\t *\n\t * Iterates the order and sets the orderby\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param orderby {string} The column ID to set the orderby.\n\t *\n\t * @return {void}\n\t */\n\tsetOrder( orderby ) {\n\t\tconst orders = [\n\t\t\tfalse,\n\t\t\t'asc',\n\t\t\t'desc',\n\t\t];\n\n\t\tif( orderby === this.orderby ) {\n\t\t\tconst currentOrder = orders.findIndex( ( order ) => order === this.order );\n\t\t\tconst nextOrder = currentOrder + 1;\n\n\t\t\t// If the provided order is invalid, reset the cycle.\n\t\t\tif( -1 === currentOrder || nextOrder === orders.length ) {\n\t\t\t\tthis.order = orders[0];\n\t\t\t\tthis.orderby = false;\n\t\t\t\t// Otherwise, increment to the next item in the cycle.\n\t\t\t}else {\n\t\t\t\tthis.order = orders[nextOrder];\n\t\t\t}\n\n\t\t}else {\n\t\t\tthis.orderby = orderby;\n\t\t\tthis.order = orders[1];\n\t\t}\n\t},\n\n\t/**\n\t * Get Sort Order.\n\t *\n\t * Checks to see if the specified column is currently being sorted. and returns the order.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param column {string} The column to check.\n\t *\n\t * @return {string|boolean} The order, or false. Can be \"asc\" or \"desc\". False if column is not sorted.\n\t */\n\tgetSortOrder( column ) {\n\t\t// Check to see if this column is valid, and currently being sorted.\n\t\tif( !this.getSchema( column ) || column !== this.orderby ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the column is sorted, return the order.\n\t\treturn this.order;\n\t},\n\n\t/**\n\t * Get Schema.\n\t *\n\t * Retrieves the table schema object from the provided column name.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param column {string} The column to retrieve the schema by.\n\t *\n\t * @return {object|undefined} The object if found, otherwise undefined.\n\t */\n\tgetSchema( column ) {\n\t\treturn this.schema.find( item => item.id === column );\n\t},\n\n\t/**\n\t * Url For Page.\n\t *\n\t * Provides the URL for the specified page.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param page {string} The column to set the orderby to.\n\t *\n\t * @return {string} The pagination URL.\n\t */\n\turlForPage( page ) {\n\n\t\tconst args = { page };\n\n\t\tif( false !== this.order ) {\n\t\t\targs.order = this.order\n\t\t}\n\n\t\tif( false !== this.orderby ) {\n\t\t\targs.orderby = this.orderby\n\t\t}\n\n\t\treturn paginateUrl( window.location.href, args );\n\t},\n\n\t/**\n\t * Get Cell.\n\t *\n\t * Retrieves the data for the row index, and the specified column..\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param index {int} The row index.\n\t * @param column {string} The column ID.\n\t *\n\t * @return {*} The cell value.\n\t */\n\tgetCell( index, column ) {\n\t\tlet cell = '';\n\t\tconst schemaColumn = this.getSchema( column );\n\t\tif( schemaColumn && this.rows[index] ) {\n\t\t\tif ( typeof schemaColumn.cell === 'function' ) {\n\t\t\t\tcell = schemaColumn.cell( this.rows[index] );\n\t\t\t} else {\n\t\t\t\tcell = this.rows[index][column];\n\t\t\t}\n\t\t}\n\n\t\treturn cell;\n\t},\n\n\t/**\n\t * Get Page Objects.\n\t *\n\t * Constructs page objects to display in the pagination.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t *\n\t * @return {array} Array of pages to display.\n\t */\n\tgetPageObjects() {\n\n\t\t/**\n\t\t * Pages.\n\t\t * An array of page objects.\n\t\t *\n\t\t * @type {[]}\n\t\t */\n\t\tlet pages = [];\n\n\t\t/**\n\t\t * Max Pages.\n\t\t * The total number of pages to display in pagination.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tconst maxPages = 20;\n\n\t\t/**\n\t\t * Midpoint\n\t\t * The midpoint of the max pages. Equates to 1/2 of the maximum number of pages.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tconst midpoint = Math.round( maxPages / 2, 0 );\n\n\t\t/**\n\t\t * Start Page.\n\t\t * Evaluates to the first page that should be displayed in pagination.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tlet startPage;\n\n\t\t/**\n\t\t * End Page.\n\t\t * Evaluates to the last page that should be displayed in pagination.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tlet endPage;\n\n\t\t// If we're on an early page, start with page 1\n\t\tif ( this.currentPage - midpoint <= 0 ) {\n\n\t\t\t// Set the starting page to 1.\n\t\t\tstartPage = 1;\n\n\t\t\t// Set the end page to either the number of pages, or if there are a lot of pages, use the max page amount.\n\t\t\tendPage = this.pages >= maxPages ? maxPages : this.pages;\n\n\t\t\t// If we're deep in pagination, start with 10 pages earlier than the current page.\n\t\t} else {\n\n\t\t\t// Offset our start page from our midpoint. This puts the current page in the middle of the pages rendered.\n\t\t\tstartPage = this.currentPage - midpoint;\n\n\t\t\t// Set the end page to the start page plus the total pages. This fills in the pages _after_ the current page.\n\t\t\tendPage = startPage + maxPages;\n\n\t\t\t// If there are not many pages left to display, just display what is left.\n\t\t\tif ( endPage > this.pages ) {\n\n\t\t\t\t// Change the end page to stop at the last possible page in pagination.\n\t\t\t\tendPage = endPage - ( endPage - this.pages );\n\t\t\t}\n\t\t}\n\n\t\t// Construct the pages.\n\t\tfor ( let page = startPage; page <= endPage; page++ ) {\n\n\t\t\t// If this is the current page, it should be disabled.\n\t\t\tconst disabled = 1 === page ? this.currentPage <= 1 : this.currentPage === page;\n\n\t\t\t// Append the page to the list of pages.\n\t\t\tpages.push( {\n\t\t\t\tpage,\n\t\t\t\tdisabled\n\t\t\t} );\n\t\t}\n\n\t\treturn pages;\n\t},\n\n\t/**\n\t * Get Pages.\n\t *\n\t * Retrieves the pages to display in the pagination. Only runs if showPagination is true.\n\t * If you need to get pages even if showPagination is false, use getPageObjects\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t *\n\t * @return {array} Array of pages to display.\n\t */\n\tgetPages() {\n\n\t\t// Bail early if pagination is not used.\n\t\tif ( false === this.showPagination ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Return page objects\n\t\treturn this.getPageObjects();\n\t},\n\n\t/**\n\t * Handle Order Event.\n\t *\n\t * Event handler used for ordering data.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param e {EventListenerObject} The event\n\t * @param orderby {string} The column to order the data by.\n\t *\n\t * @return {void}\n\t */\n\thandleOrderEvent( e, orderby ) {\n\t\te.preventDefault();\n\t\tif( true === this.allowSorting ) {\n\t\t\tscrollWrapperTo( getContentWrapper().scrollleft, 0 );\n\t\t\tthis.setOrder( orderby );\n\n\t\t\tthis.fetchPage( 1 );\n\t\t}\n\t},\n\n\t/**\n\t * Handle Page Event.\n\t *\n\t * Event handler used for paginating through data.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param e {EventListenerObject} The event\n\t * @param page {int} The page number to set\n\t *\n\t * @return {void}\n\t */\n\thandlePageEvent( e, page ) {\n\t\te.preventDefault();\n\n\t\tif( this.currentPage === page ) {\n\t\t\treturn;\n\t\t}\n\n\t\tscrollWrapperTo( getContentWrapper().scrollleft, 0 );\n\n\t\tthis.fetchPage( page );\n\t},\n\n\t/**\n\t * Fetch Page.\n\t *\n\t * Fetches the data for the specified page.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param page        {int} The page number to set\n\t * @param skipHistory {boolean} Set to true to prevent this update from being pushed to history.\n\t *\n\t * @return {Promise} The page data.\n\t */\n\tfetchPage( page, skipHistory = false ) {\n\t\tthis.isLoading = true;\n\t\tthis.currentPage = page;\n\n\t\tthis.nextPage = page + 1;\n\t\tthis.previousPage = page - 1;\n\t\tconst args = {\n\t\t\tpage,\n\t\t\tnumber: this.perPage\n\t\t};\n\n\t\targs.number = this.perPage;\n\n\t\tif( false !== this.order ) {\n\t\t\targs.order = this.order;\n\t\t}\n\n\t\tif( false !== this.orderby ) {\n\t\t\targs.orderby = this.orderby;\n\t\t}\n\n\t\treturn new Promise( async( res, rej ) => {\n\t\t\tconst data = await portalSchemaRows( this.type, args );\n\n\t\t\tthis.rows = data.rows;\n\t\t\tthis.pages = data.pages;\n\n\t\t\t// If the pagination hasn't been explicitly set, dynamically display it if necessary.\n\t\t\tif ( undefined === this.showPagination ) {\n\t\t\t\tthis.showPagination = data.pages > 1;\n\t\t\t}\n\n\n\t\t\tthis.currentPage = page;\n\t\t\tthis.previousPage = this.previousPage > 0 ? this.previousPage : page;\n\t\t\tthis.nextPage = this.nextPage > this.pages ? page : this.nextPage;\n\t\t\tthis.isLoading = false;\n\n\t\t\tthis.updateUrl( args, skipHistory );\n\n\t\t\tres( data );\n\t\t} )\n\t},\n\n\t/**\n\t * Update URL\n\t *\n\t * Updates the URL and adds it to the browser's history.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t * @param args        {object}  Arguments to append to the URL\n\t * @param skipHistory {boolean} Set to true to prevent this update from being pushed to history.\n\t *\n\t * @return {void}\n\t */\n\tupdateUrl( args, skipHistory = false ) {\n\n\t\t// Remove the number from the args. This prevents an un-necessary query param from being added to the URL.\n\t\tif ( args.number ) {\n\t\t\tdelete args.number;\n\t\t}\n\n\t\t// Only push state if history isn't skipped, and the page has pagination.\n\t\t// If the page does not have pagination, there's no reason to push history since the app doesn't handle routes.\n\t\tif ( false === skipHistory && false !== this.showPagination && undefined !== this.showPagination ) {\n\t\t\twindow.history.pushState( undefined, document.title, paginateUrl( window.location.href, args ) );\n\t\t}\n\t},\n\n\t/**\n\t * Setup Columns.\n\t *\n\t * Sets up columns to use in this table.\n\t *\n\t * @since 1.0.4\n\t * @access public\n\t *\n\t * @return void\n\t */\n\tsetupColumns() {\n\t\tthis.schema = this.schema;\n\t},\n\n\t/**\n\t * Init.\n\t *\n\t * Initializes the AlpineJS instance.\n\t *\n\t * @since      1.0.0\n\t * @access     public\n\t *\n\t * @return void\n\t */\n\tasync init() {\n\t\tconst currentPage = getPage( window.location.href )\n\n\t\tif ( false === this.order && hasQueryArg( window.location.href, 'order' ) ) {\n\t\t\tthis.order = getQueryArg( window.location.href, 'order' )\n\t\t}\n\n\t\tif ( false === this.orderby && hasQueryArg( window.location.href, 'orderby' ) ) {\n\t\t\tthis.orderby = getQueryArg( window.location.href, 'orderby' )\n\t\t}\n\n\t\tthis.setupColumns();\n\t\tthis.fetchPage( currentPage, true );\n\n\t\tthis.isLoading = false;\n\n\t\twindow.onpopstate = function ( e ) {\n\t\t\tthis.init()\n\t\t}.bind( this );\n\n\t\twindow.onpushstate = function ( e ) {\n\t\t\tthis.init()\n\t\t}.bind( this );\n\n\t}\n}","/**\n * DOM Helper Functions.\n *\n * Generic helper functions specific to AffilaiteWP Affiliate Portal.\n *\n * @author Alex Standiford\n * @since 1.0.0\n */\n\n/**\n * Get Content Wrapper\n * Retrieves the portal content wrapper.\n *\n * @since 1.0.0\n *\n * @returns {Element}\n */\nfunction getContentWrapper() {\n\treturn document.querySelector( '#portal-content-wrap' );\n}\n\n/**\n * Scroll Wrapper To.\n * Scrolls the portal content wrapper to the specified x, y coordinates.\n *\n * @since 1.0.0\n * @param {int} x The x coordinate.\n * @param {int} y The y coordinate.\n */\nfunction scrollWrapperTo( x, y ) {\n\treturn getContentWrapper().scrollTo( x, y );\n}\n\nexport {getContentWrapper, scrollWrapperTo}","/**\n * Helper Functions.\n *\n * Generic helper functions specific to AffilaiteWP Affiliate Portal.\n *\n * @author Alex Standiford\n * @since 1.0.0\n */\n\n/**\n * Pause.\n *\n * Delays script execution for the specified amount of time.\n *\n * @since 1.0.0\n * @param length Amount of time to delay, in milliseconds.\n *\n * @returns {Promise} Resolved promise after specified length\n */\nfunction pause( length ) {\n\treturn new Promise( resolve => setTimeout( resolve, length ) )\n}\n\n/**\n * Adds a trailing slash to the input value, if it does not already have one.\n *\n * @since 1.0.0\n * @param input {string} The value to append a slash.\n *\n * @returns {string} The appended string.\n */\nfunction trailingslashit( input ) {\n\tif( typeof input !== 'string' || input.endsWith( '/' ) ) {\n\t\treturn input;\n\t}\n\n\treturn `${input}/`;\n}\n\nexport { pause, trailingslashit}","/**\n * URL Helper Functions.\n *\n * Helper functions that extend the @wordpress/url library.\n *\n * @author Alex Standiford\n * @since 1.0.0\n */\n\n/**\n * WordPress dependencies\n */\nimport {\n\tgetAuthority,\n\tgetFragment,\n\tgetPath,\n\tgetProtocol,\n\tgetQueryString,\n\taddQueryArgs\n} from \"@wordpress/url\";\n\n/**\n * Internal dependencies\n */\nimport {trailingslashit} from '@affiliatewp-portal/helpers';\n\nconst paginationRegex = /\\/([^\\/a-zA-Z-_]+)\\/?$/;\n\n/**\n * Append URL.\n *\n * Appends the provided path to the end of the provided URL's path.\n *\n * @since      1.0.0\n * @access     protected\n * @param {string} url The URL to append to.\n * @param {string} append The string to append to the URL.\n *\n * @return {string} URL with path appended.\n */\nfunction appendUrl( url, append ) {\n\t// Remove the slash at the beginning of append, if it was mistakenly added.\n\tif( append.startsWith( '/' ) ) {\n\t\tappend = append.substr( 1 );\n\t}\n\n\t// Define the parts of the URL.\n\treturn constructUrl( url, [\n\t\t'protocol',\n\t\t'authority',\n\t\t'path',\n\t\ttrailingslashit( append ),\n\t\t'querystring',\n\t\t'fragment',\n\t] );\n\n}\n\n/**\n * Construct URL.\n *\n * Constructs a URL from a URL and specified parts.\n *\n * @since      1.0.0\n * @access     protected\n * @param {string} url The url to construct parts from.\n * @param {array} parts List of parts to construct, in the order they should be constructed.\n *                This can be any of the following: 'protocol', 'authority', 'path', 'querystring', 'fragment'\n *                If an arbitrary string is passed, that string will be inserted in the URL.\n *\n * @return {string} constructed URL\n */\nfunction constructUrl( url, parts ) {\n\tconst urlObject = {\n\n\t\t/**\n\t\t * Get Protocol.\n\t\t * Retrieves the protocol from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetProtocol: () => {\n\t\t\treturn `${getProtocol( url )}//`;\n\t\t},\n\n\t\t/**\n\t\t * Get Authority.\n\t\t * Retrieves the authority from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetAuthority: () => {\n\t\t\treturn trailingslashit( getAuthority( url ) )\n\t\t},\n\n\t\t/**\n\t\t * Get Path.\n\t\t * Retrieves the path from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetPath: () => {\n\t\t\treturn trailingslashit( getPath( url ) )\n\t\t},\n\n\t\t/**\n\t\t * Get Query String.\n\t\t * Retrieves the querytstring from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetQuerystring: () => {\n\t\t\tconst queryString = getQueryString( url );\n\t\t\treturn queryString ? `?${getQueryString( url )}` : '';\n\t\t},\n\n\t\t/**\n\t\t * Get Fragment.\n\t\t * Retrieves the fragment from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetFragment: () => {\n\t\t\treturn getFragment( url )\n\t\t},\n\t}\n\n\treturn parts.reduce( ( acc, part ) => {\n\n\t\tconst isValidUrlPart = ['protocol', 'authority', 'path', 'querystring', 'fragment'].includes( part.toLowerCase() );\n\n\t\tif( !isValidUrlPart && typeof part === 'string' ) {\n\t\t\treturn acc + part;\n\t\t}else if( !isValidUrlPart ) {\n\t\t\treturn acc;\n\t\t}\n\t\tconst callback = urlObject['get' + part.charAt( 0 ).toUpperCase() + part.slice( 1 ).toLowerCase()];\n\t\tconst urlPart = callback();\n\n\t\tif( undefined === urlPart ) {\n\t\t\treturn acc;\n\t\t}\n\n\t\treturn acc + urlPart;\n\t}, '' );\n}\n\n/**\n * Authorities Match.\n *\n * Returns true if the provided url matches the specified base authority.\n *\n * @since      1.0.0\n * @access     protected\n * @param url {string} The URL to check.\n * @param baseAuthority {string} The base authority to check against.\n *\n * @return {boolean} true if authorities match, otherwise false.\n */\nfunction authoritiesMatch( url, baseAuthority ) {\n\tconst inputAuthority = getAuthority( url );\n\n\t// Return true if the authorities match.\n\tif( inputAuthority === baseAuthority ) {\n\t\treturn true;\n\t}\n\n\t// Return true if inputAuthority is a subdomain of baseAuthority.\n\tconst regex = new RegExp(\"\\\\w\\\\.\" + baseAuthority + \"$\");\n\treturn regex.test( inputAuthority );\n}\n\n/**\n * Has valid protocol.\n *\n * Returns true if the provided URL has a valid URL protocol for a typical web request.\n *\n * @since      1.0.0\n * @access     protected\n * @param url {string} The URL to check.\n *\n * @returns {boolean} true if valid, otherwise false.\n */\nfunction hasValidProtocol( url ) {\n\tconst protocol = getProtocol( url );\n\n\treturn ['https:', 'http:'].includes( protocol );\n}\n\n/**\n * Get Page.\n *\n * Fetches the page from the provided URL\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL from which the page number should be retrieved.\n *\n * @returns {string} The page number\n */\nfunction getPage( url ) {\n\tconst path = getPath( url );\n\n\tconst search = path.match( paginationRegex );\n\n\t// If no page was found, we are on page 1.\n\tif( null === search ) {\n\t\treturn '1';\n\t}\n\n\t// Otherwise, get the page number.\n\treturn search[1];\n}\n\n/**\n * Paginate URL.\n *\n * Appends the URL with the provided query args, and formats for pretty pagination.\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL to paginate.\n * @param args {object} List of query param values keyed by their key.\n *                      If a page is passed, it will be formatted for pagination.\n *\n * @returns {string} The page number\n */\nfunction paginateUrl( url, args ) {\n\tgetPage( url );\n\tconst path = trailingslashit( getPath( url ) ).replace( paginationRegex, '/' );\n\n\t// Strip out any existing pagination from the path.\n\tconst urlParts = ['protocol', 'authority', path];\n\n\t// Append the page number, if we have a page to append.\n\tif( args.page ) {\n\t\tif( args.page > 1 ) {\n\t\t\turlParts.push( args.page + '/' );\n\t\t}\n\t\tdelete args.page\n\t}\n\n\t// Construct the URL using the provided URL parts.\n\tconst result = constructUrl( url, urlParts );\n\n\t// Append query args to the resulting URL.\n\treturn addQueryArgs( result, args );\n}\n\n/**\n * Validates a given URL.\n *\n * Simple validation of an url.\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL to validate.\n *\n * @returns {bool}\n */\nfunction validateUrl( url ) {\n\treturn /\\.\\w\\w.*/.test( url );\n}\n\n/**\n * Given a path, returns a normalized path where equal query parameter values\n * will be treated as identical, regardless of order they appear in the original\n * text.\n *\n * @param {string} path Original path.\n *\n * @return {string} Normalized path.\n */\nfunction getStablePath( path ) {\n\tconst splitted = path.split( '?' );\n\tconst query = splitted[ 1 ];\n\tconst base = splitted[ 0 ];\n\tif ( ! query ) {\n\t\treturn base;\n\t}\n\n\t// 'b=1&c=2&a=5'\n\treturn (\n\t\tbase +\n\t\t'?' +\n\t\tquery\n\t\t\t// [ 'b=1', 'c=2', 'a=5' ]\n\t\t\t.split( '&' )\n\t\t\t// [ [ 'b, '1' ], [ 'c', '2' ], [ 'a', '5' ] ]\n\t\t\t.map( ( entry ) => entry.split( '=' ) )\n\t\t\t// [ [ 'a', '5' ], [ 'b, '1' ], [ 'c', '2' ] ]\n\t\t\t.sort( ( a, b ) => a[ 0 ].localeCompare( b[ 0 ] ) )\n\t\t\t// [ 'a=5', 'b=1', 'c=2' ]\n\t\t\t.map( ( pair ) => pair.join( '=' ) )\n\t\t\t// 'a=5&b=1&c=2'\n\t\t\t.join( '&' )\n\t);\n}\n\nexport {paginateUrl, getPage, appendUrl, authoritiesMatch, hasValidProtocol, constructUrl, validateUrl, getStablePath};\n","(function() { module.exports = window[\"AFFWP\"][\"portal\"][\"sdk\"]; }());","(function() { module.exports = window[\"regeneratorRuntime\"]; }());","(function() { module.exports = window[\"wp\"][\"url\"]; }());"],"sourceRoot":""}