{"version":3,"sources":["webpack://AFFWP.portal.[name]/webpack/bootstrap","webpack://AFFWP.portal.[name]/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://AFFWP.portal.[name]/./src/helpers/helpers.js","webpack://AFFWP.portal.[name]/./src/integrations/direct-link/index.js","webpack://AFFWP.portal.[name]/./src/url-helpers/url-helpers.js","webpack://AFFWP.portal.[name]/external \"regeneratorRuntime\"","webpack://AFFWP.portal.[name]/external [\"wp\",\"url\"]"],"names":["pause","length","Promise","resolve","setTimeout","trailingslashit","input","endsWith","settings","isLoading","valid","links","maxLinks","rejected","showingSuccessMessage","showUpdateNotice","showInvalidSubmission","isDismissingNotice","init","AFFWP","portal","core","fetch","path","cacheResult","response","map","link","timer","isValidatingUrl","isRemoving","join","addDomain","checkValid","push","url_id","url","errors","getLinkObject","index","undefined","getLinkParam","param","object","removeLink","linkIndex","linkToDelete","urlId","method","data","splice","submit","success","dismiss","hasError","error","hasErrors","Object","keys","linkInvalid","find","validateFrontend","currentLink","clearTimeout","foundErrors","trim","empty","duplicated","validateUrl","invalid","validateBackend","bind","addon","addonReason","paginationRegex","appendUrl","append","startsWith","substr","constructUrl","parts","urlObject","getProtocol","getAuthority","getPath","getQuerystring","queryString","getQueryString","getFragment","reduce","acc","part","isValidUrlPart","includes","toLowerCase","callback","charAt","toUpperCase","slice","urlPart","authoritiesMatch","baseAuthority","inputAuthority","regex","RegExp","test","hasValidProtocol","protocol","getPage","search","match","paginateUrl","args","replace","urlParts","page","result","addQueryArgs","getStablePath","splitted","split","query","base","entry","sort","a","b","localeCompare","pair"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,iH;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,CAAgBC,MAAhB,EAAyB;AACxB,SAAO,IAAIC,OAAJ,CAAa,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAAED,OAAF,EAAWF,MAAX,CAAd;AAAA,GAApB,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,eAAT,CAA0BC,KAA1B,EAAkC;AACjC,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,QAAN,CAAgB,GAAhB,CAAjC,EAAyD;AACxD,WAAOD,KAAP;AACA;;AAED,mBAAUA,KAAV;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,QAAT,GAAoB;AACnB,SAAO;AAEN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,aAAS,EAAE,KAZL;;AAcN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,SAAK,EAAE,KAxBD;;AA0BN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,SAAK,EAAE,EApCD;;AAsCN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,YAAQ,EAAE,CAhDJ;;AAkDN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,YAAQ,EAAE,EA5DJ;;AA8DN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,yBAAqB,EAAE,KAxEjB;;AA0EN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,oBAAgB,EAAE,KApFZ;;AAsFN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGC,yBAAqB,EAAE,KAhGlB;;AAkGN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,sBAAkB,EAAE,KA5Gd;;AA8GN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,QAxHA,kBAwHO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEWC,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkBC,KAAlB,CAAyB;AAC/CC,sBAAI,EAAE,6DADyC;AAE/CC,6BAAW,EAAE;AAFkC,iBAAzB,CAFX;;AAAA;AAENC,wBAFM;AAOZ;AACA,qBAAI,CAACd,KAAL,GAAac,QAAQ,CAACd,KAAT,CAAee,GAAf,CAAoB,UAAAC,IAAI,EAAI;AACxCA,sBAAI,CAACC,KAAL,GAAa,KAAb;AACAD,sBAAI,CAACE,eAAL,GAAuB,KAAvB;AACAF,sBAAI,CAACG,UAAL,GAAkB,KAA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","file":"direct-link.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/integrations/direct-link/index.js\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Helper Functions.\n *\n * Generic helper functions specific to AffilaiteWP Affiliate Portal.\n *\n * @author Alex Standiford\n * @since 1.0.0\n */\n\n/**\n * Pause.\n *\n * Delays script execution for the specified amount of time.\n *\n * @since 1.0.0\n * @param length Amount of time to delay, in milliseconds.\n *\n * @returns {Promise} Resolved promise after specified length\n */\nfunction pause( length ) {\n\treturn new Promise( resolve => setTimeout( resolve, length ) )\n}\n\n/**\n * Adds a trailing slash to the input value, if it does not already have one.\n *\n * @since 1.0.0\n * @param input {string} The value to append a slash.\n *\n * @returns {string} The appended string.\n */\nfunction trailingslashit( input ) {\n\tif( typeof input !== 'string' || input.endsWith( '/' ) ) {\n\t\treturn input;\n\t}\n\n\treturn `${input}/`;\n}\n\nexport { pause, trailingslashit}","/**\n * Direct Link Tracking view Handler.\n *\n * Works with the Direct Link Tracking screen in the affiliate portal to handle link operations.\n *\n * @since 1.0.0\n *\n */\n\n/**\n * Internal dependencies\n */\nimport {validateUrl} from '@affiliatewp-portal/url-helpers';\n\n /**\n * Direct Link Tracking view screen AlpineJS handler.\n *\n * Works with the Direct Link Tracking screen in the affiliate portal to handle link operations.\n *\n * @since 1.0.0\n * @access public\n *\n * @returns object The AlpineJS object.\n */\nfunction settings() {\n\treturn {\n\n\t\t/**\n\t\t * Is Loading.\n\t\t *\n\t\t * Determines if the app is loading.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tisLoading: false,\n\n\t\t/**\n\t\t * Is form valid.\n\t\t *\n\t\t * Determines if the form is valid.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tvalid: false,\n\n\t\t/**\n\t\t * Current links Items.\n\t\t *\n\t\t * Array containing the current affiliate direct links.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type array\n\t\t */\n\t\tlinks: [],\n\n\t\t/**\n\t\t * Max number of links allowed.\n\t\t *\n\t\t * The max number of links an affiliate can register.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type int\n\t\t */\n\t\tmaxLinks: 0,\n\n\t\t/**\n\t\t * Rejected domains.\n\t\t *\n\t\t * HTML string with list of rejected domains to show to the affiliate.\n\t\t *\n\t\t * @since  1.0.4\n\t\t * @access public\n\t\t *\n\t\t * @type string\n\t\t */\n\t\trejected: '',\n\n\t\t/**\n\t\t * Showing success message.\n\t\t *\n\t\t * Shows success message when the form is submitted\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tshowingSuccessMessage: false,\n\n\t\t/**\n\t\t * Shows update notice.\n\t\t *\n\t\t * Shows notice to the user when links were updated.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tshowUpdateNotice: false,\n\n\t\t/**\n\t\t * Shows invalid submission.\n\t\t *\n\t\t * Shows to the user when invalid links were submitted.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\t showInvalidSubmission: false,\n\n\t\t/**\n\t\t * Is dismissing notice.\n\t\t *\n\t\t * Determines if the app is dismissing the notice.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tisDismissingNotice: false,\n\n\t\t/**\n\t\t * Init.\n\t\t *\n\t\t * Initializes the AlpineJS instance.\n\t\t *\n\t\t * @since      1.0.0\n\t\t * @access     public\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tasync init() {\n\t\t\t// Fetch list of direct links.\n\t\t\tconst response = await AFFWP.portal.core.fetch( {\n\t\t\t\tpath: 'affwp/v2/portal/integrations/direct-link-tracking/get-links',\n\t\t\t\tcacheResult: false\n\t\t\t} );\n\n\t\t\t// Add some extra flags to each link.\n\t\t\tthis.links = response.links.map( link => {\n\t\t\t\tlink.timer = false;\n\t\t\t\tlink.isValidatingUrl = false;\n\t\t\t\tlink.isRemoving = false;\n\t\t\t\treturn link;\n\t\t\t} );\n\t\t\tthis.rejected = response.rejected.join('<br>');\n\n\t\t\t// Add one default domain if no links saved.\n\t\t\tif( this.links.length === 0 ) {\n\t\t\t\tthis.addDomain();\n\t\t\t}\n\n\t\t\tthis.checkValid();\n\n\t\t\tthis.isLoading = false;\n\t\t},\n\n\t\t/**\n\t\t * Adds a new direct link domain.\n\t\t *\n\t\t * Adds a new domain to the list of links.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @returns void\n\t\t */\n\t\taddDomain() {\n\t\t\tif( this.links.length + 1 <= this.maxLinks ) {\n\t\t\t\tthis.links.push( {\n\t\t\t\t\turl_id: '',\n\t\t\t\t\turl: '',\n\t\t\t\t\terrors: {}\n\t\t\t\t} );\n\n\t\t\t\t// New link is empty so the form should be invalid.\n\t\t\t\tthis.valid = false;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Get Link Object.\n\t\t *\n\t\t * Attempts to retrieve the Link object from the list of links.\n\t\t *\n\t\t * @since      1.0.0\n\t\t * @access     public\n\t\t * \n\t\t * @param index {int} index of link on links array.\n\t\t * @return {linkObject|boolean} linkObject instance, if it is set. Otherwise false.\n\t\t */\n\t\tgetLinkObject( index ) {\n\n\t\t\t// Bail if the index is not set.\n\t\t\tif( undefined === this.links[index] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.links[index];\n\t\t},\n\n\t\t/**\n\t\t * Get Link Param.\n\t\t *\n\t\t * Attempts to retrieve the param from the specified link object.\n\t\t *\n\t\t * @since      1.0.0\n\t\t * @access     public\n\t\t * \n\t\t * @param index {index} Index of link on links array.\n\t\t * @param param {string} Param Link object param to retrieve.\n\t\t *\n\t\t * @return {*} The param value.\n\t\t */\n\t\tgetLinkParam( index, param ) {\n\t\t\tconst object = this.getLinkObject( index );\n\n\t\t\t/*\n\t\t\t* If the Link index doesn't exist, or the param cannot be found, bail with an empty string\n\t\t\t* Empty string is used here because this method is frequently called in the DOM.\n\t\t\t* Returning false would cause the DOM elements to display \"false\" in various inputs.\n\t\t\t */\n\t\t\tif( false === object || undefined === object[param] ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn object[param];\n\t\t},\n\n\t\t/**\n\t\t * Removes direct link domain.\n\t\t *\n\t\t * Removes a link from the list of ids by url id.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param linkIndex {int} Index of link on links array.\n\t\t * @returns void\n\t\t */\n\t\tasync removeLink( linkIndex ) {\n\t\t\tconst linkToDelete = this.getLinkObject( linkIndex );\n\t\t\tconst urlId = linkToDelete.url_id;\n\t\t\tif( urlId ) {\n\t\t\t\tlinkToDelete.isRemoving = true;\n\t\t\t\tawait AFFWP.portal.core.fetch( {\n\t\t\t\t\tpath: `affwp/v2/portal/integrations/direct-link-tracking/links/${urlId}`,\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\tdata: {},\n\t\t\t\t} );\n\t\t\t}\n\t\t\tthis.links.splice( linkIndex, 1 );\n\t\t},\n\n\t\t/**\n\t\t * Submit links.\n\t\t *\n\t\t * Calls the REST API to save the links and get the new list of links and notices.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @returns void\n\t\t */\n\t\tasync submit() {\n\t\t\t// Bail if form not valid.\n\t\t\tif( ! this.valid ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isLoading = true;\n\n\t\t\t// Post list of links and links to delete.\n\t\t\tconst response = await AFFWP.portal.core.fetch( {\n\t\t\t\tpath: 'affwp/v2/portal/integrations/direct-link-tracking/save-links',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\tlinks: this.links,\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.showInvalidSubmission = !response.success;\n\t\t\tthis.links = response.links;\n\t\t\tthis.rejected = response.rejected.join('<br>');\n\t\t\tthis.showUpdateNotice = true;\n\t\t\tthis.isLoading = false;\n\t\t},\n\n\t\t/**\n\t\t * Dismiss notice.\n\t\t *\n\t\t * Calls the REST API to dismiss the notice and get the new list of links and notices.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param url_id {int} URL ID.\n\t\t * @returns void\n\t\t */\n\t\tasync dismiss( url_id ) {\n\t\t\t// trigger dismiss only once at a time.\n\t\t\tif( this.isDismissingNotice ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isDismissingNotice = true;\n\t\t\tthis.isLoading = true;\n\n\t\t\t// Call REST API to dismiss the notice for this url id.\n\t\t\tawait AFFWP.portal.core.fetch( {\n\t\t\t\tpath: 'affwp/v2/portal/integrations/direct-link-tracking/dismiss-notice',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\turl_id,\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// reload data.\n\t\t\tthis.init();\n\t\t},\n\n\t\t/**\n\t\t * Has Error.\n\t\t *\n\t\t * Determines if the specified error is set for a certain link.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param link {linkObject} Link object.\n\t\t * @param error {string} Type of error.\n\t\t * @returns {boolean} True if the error is true. Otherwise false.\n\t\t */\n\t\thasError( link, error ) {\n\t\t\treturn link.errors && true === link.errors[error];\n\t\t},\n\n\t\t/**\n\t\t * Has Errors.\n\t\t *\n\t\t * Determines if the link has any errors.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param link {linkObject} Link object.\n\t\t * @returns {boolean} True if the error is true. Otherwise false.\n\t\t */\n\t\thasErrors( link ) {\n\t\t\treturn link.errors && Object.keys( link.errors ).length > 0;\n\t\t},\n\n\t\t/**\n\t\t * Checks if valid.\n\t\t *\n\t\t * Determines if there are errors on any of the links.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @returns {boolean} True if the error is true. Otherwise false.\n\t\t */\n\t\tcheckValid() {\n\t\t\tlet valid = true;\n\t\t\tconst linkInvalid = this.links.find( link => link.errors && Object.keys( link.errors ).length > 0 );\n\t\t\tif( linkInvalid ) {\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tthis.valid = valid;\n\t\t},\n\n\t\t/**\n\t\t * Validates links on the frontend.\n\t\t *\n\t\t * Determines if a link is valid just using client-side validations.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param linkIndex {int} Index of link on links array.\n\t\t * @returns void\n\t\t */\n\t\tvalidateFrontend( linkIndex ) {\n\t\t\tconst currentLink = this.getLinkObject( linkIndex );\n\n\t\t\t// Bail if link not found.\n\t\t\tif( false === currentLink ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst url = currentLink.url;\n\n\t\t\t// Clear backend validation timeout, url has changed.\n\t\t\tclearTimeout( currentLink.timer );\n\n\t\t\t// Reset errors.\n\t\t\tlet foundErrors = false;\n\t\t\tcurrentLink.errors = [];\n\n\t\t\t// Check if empty.\n\t\t\tif( '' === url.trim() ) {\n\t\t\t\tcurrentLink.errors.empty = true;\n\t\t\t\tfoundErrors = true;\n\t\t\t} else {\n\t\t\t\t// Check if duplicated.\n\t\t\t\tconst duplicated = this.links.find( ( link, index ) => index !== linkIndex && link.url === url );\n\t\t\t\tif( duplicated ) {\n\t\t\t\t\tcurrentLink.errors.duplicated = true;\n\t\t\t\t\tfoundErrors = true;\n\t\t\t\t}\n\n\t\t\t\t// Check if valid url (simple url validation).\n\t\t\t\tif( ! validateUrl( url ) ) {\n\t\t\t\t\tcurrentLink.errors.invalid = true;\n\t\t\t\t\tfoundErrors = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( foundErrors ) {\n\t\t\t\tthis.checkValid();\n\t\t\t} else {\n\t\t\t\t// No client-side errors, let's check on backend with add-on validation.\n\t\t\t\tthis.valid = false;\n\t\t\t\t// Wait 500ms before submitting the url.\n\t\t\t\tcurrentLink.timer = setTimeout( this.validateBackend.bind(this, linkIndex), 500 );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Validates links on the backend.\n\t\t *\n\t\t * Determines if a link is valid just using client-side validations.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param linkIndex {int} Index of link on links array.\n\t\t * @returns void\n\t\t */\n\t\tasync validateBackend( linkIndex ) {\n\t\t\tconst currentLink = this.getLinkObject( linkIndex );\n\n\t\t\t// Bail if link not found.\n\t\t\tif( false === currentLink ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst url = currentLink.url;\n\n\t\t\tcurrentLink.isValidatingUrl = true;\n\t\t\tconst response = await AFFWP.portal.core.fetch( {\n\t\t\t\tpath: 'affwp/v2/portal/integrations/direct-link-tracking/validate',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\turl\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tcurrentLink.isValidatingUrl = false;\n\n\t\t\t// url has changed, ignore this validation.\n\t\t\tif( url !== currentLink.url ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( ! response.success ) {\n\t\t\t\tcurrentLink.errors.addon = true;\n\t\t\t\tcurrentLink.errors.addonReason = response.error;\n\t\t\t}\n\t\t\tthis.checkValid();\n\t\t}\n\t}\n}\n\nexport default settings;\n","/**\n * URL Helper Functions.\n *\n * Helper functions that extend the @wordpress/url library.\n *\n * @author Alex Standiford\n * @since 1.0.0\n */\n\n/**\n * WordPress dependencies\n */\nimport {\n\tgetAuthority,\n\tgetFragment,\n\tgetPath,\n\tgetProtocol,\n\tgetQueryString,\n\taddQueryArgs\n} from \"@wordpress/url\";\n\n/**\n * Internal dependencies\n */\nimport {trailingslashit} from '@affiliatewp-portal/helpers';\n\nconst paginationRegex = /\\/([^\\/a-zA-Z-_]+)\\/?$/;\n\n/**\n * Append URL.\n *\n * Appends the provided path to the end of the provided URL's path.\n *\n * @since      1.0.0\n * @access     protected\n * @param {string} url The URL to append to.\n * @param {string} append The string to append to the URL.\n *\n * @return {string} URL with path appended.\n */\nfunction appendUrl( url, append ) {\n\t// Remove the slash at the beginning of append, if it was mistakenly added.\n\tif( append.startsWith( '/' ) ) {\n\t\tappend = append.substr( 1 );\n\t}\n\n\t// Define the parts of the URL.\n\treturn constructUrl( url, [\n\t\t'protocol',\n\t\t'authority',\n\t\t'path',\n\t\ttrailingslashit( append ),\n\t\t'querystring',\n\t\t'fragment',\n\t] );\n\n}\n\n/**\n * Construct URL.\n *\n * Constructs a URL from a URL and specified parts.\n *\n * @since      1.0.0\n * @access     protected\n * @param {string} url The url to construct parts from.\n * @param {array} parts List of parts to construct, in the order they should be constructed.\n *                This can be any of the following: 'protocol', 'authority', 'path', 'querystring', 'fragment'\n *                If an arbitrary string is passed, that string will be inserted in the URL.\n *\n * @return {string} constructed URL\n */\nfunction constructUrl( url, parts ) {\n\tconst urlObject = {\n\n\t\t/**\n\t\t * Get Protocol.\n\t\t * Retrieves the protocol from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetProtocol: () => {\n\t\t\treturn `${getProtocol( url )}//`;\n\t\t},\n\n\t\t/**\n\t\t * Get Authority.\n\t\t * Retrieves the authority from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetAuthority: () => {\n\t\t\treturn trailingslashit( getAuthority( url ) )\n\t\t},\n\n\t\t/**\n\t\t * Get Path.\n\t\t * Retrieves the path from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetPath: () => {\n\t\t\treturn trailingslashit( getPath( url ) )\n\t\t},\n\n\t\t/**\n\t\t * Get Query String.\n\t\t * Retrieves the querytstring from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetQuerystring: () => {\n\t\t\tconst queryString = getQueryString( url );\n\t\t\treturn queryString ? `?${getQueryString( url )}` : '';\n\t\t},\n\n\t\t/**\n\t\t * Get Fragment.\n\t\t * Retrieves the fragment from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetFragment: () => {\n\t\t\treturn getFragment( url )\n\t\t},\n\t}\n\n\treturn parts.reduce( ( acc, part ) => {\n\n\t\tconst isValidUrlPart = ['protocol', 'authority', 'path', 'querystring', 'fragment'].includes( part.toLowerCase() );\n\n\t\tif( !isValidUrlPart && typeof part === 'string' ) {\n\t\t\treturn acc + part;\n\t\t}else if( !isValidUrlPart ) {\n\t\t\treturn acc;\n\t\t}\n\t\tconst callback = urlObject['get' + part.charAt( 0 ).toUpperCase() + part.slice( 1 ).toLowerCase()];\n\t\tconst urlPart = callback();\n\n\t\tif( undefined === urlPart ) {\n\t\t\treturn acc;\n\t\t}\n\n\t\treturn acc + urlPart;\n\t}, '' );\n}\n\n/**\n * Authorities Match.\n *\n * Returns true if the provided url matches the specified base authority.\n *\n * @since      1.0.0\n * @access     protected\n * @param url {string} The URL to check.\n * @param baseAuthority {string} The base authority to check against.\n *\n * @return {boolean} true if authorities match, otherwise false.\n */\nfunction authoritiesMatch( url, baseAuthority ) {\n\tconst inputAuthority = getAuthority( url );\n\n\t// Return true if the authorities match.\n\tif( inputAuthority === baseAuthority ) {\n\t\treturn true;\n\t}\n\n\t// Return true if inputAuthority is a subdomain of baseAuthority.\n\tconst regex = new RegExp(\"\\\\w\\\\.\" + baseAuthority + \"$\");\n\treturn regex.test( inputAuthority );\n}\n\n/**\n * Has valid protocol.\n *\n * Returns true if the provided URL has a valid URL protocol for a typical web request.\n *\n * @since      1.0.0\n * @access     protected\n * @param url {string} The URL to check.\n *\n * @returns {boolean} true if valid, otherwise false.\n */\nfunction hasValidProtocol( url ) {\n\tconst protocol = getProtocol( url );\n\n\treturn ['https:', 'http:'].includes( protocol );\n}\n\n/**\n * Get Page.\n *\n * Fetches the page from the provided URL\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL from which the page number should be retrieved.\n *\n * @returns {string} The page number\n */\nfunction getPage( url ) {\n\tconst path = getPath( url );\n\n\tconst search = path.match( paginationRegex );\n\n\t// If no page was found, we are on page 1.\n\tif( null === search ) {\n\t\treturn '1';\n\t}\n\n\t// Otherwise, get the page number.\n\treturn search[1];\n}\n\n/**\n * Paginate URL.\n *\n * Appends the URL with the provided query args, and formats for pretty pagination.\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL to paginate.\n * @param args {object} List of query param values keyed by their key.\n *                      If a page is passed, it will be formatted for pagination.\n *\n * @returns {string} The page number\n */\nfunction paginateUrl( url, args ) {\n\tgetPage( url );\n\tconst path = trailingslashit( getPath( url ) ).replace( paginationRegex, '/' );\n\n\t// Strip out any existing pagination from the path.\n\tconst urlParts = ['protocol', 'authority', path];\n\n\t// Append the page number, if we have a page to append.\n\tif( args.page ) {\n\t\tif( args.page > 1 ) {\n\t\t\turlParts.push( args.page + '/' );\n\t\t}\n\t\tdelete args.page\n\t}\n\n\t// Construct the URL using the provided URL parts.\n\tconst result = constructUrl( url, urlParts );\n\n\t// Append query args to the resulting URL.\n\treturn addQueryArgs( result, args );\n}\n\n/**\n * Validates a given URL.\n *\n * Simple validation of an url.\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL to validate.\n *\n * @returns {bool}\n */\nfunction validateUrl( url ) {\n\treturn /\\.\\w\\w.*/.test( url );\n}\n\n/**\n * Given a path, returns a normalized path where equal query parameter values\n * will be treated as identical, regardless of order they appear in the original\n * text.\n *\n * @param {string} path Original path.\n *\n * @return {string} Normalized path.\n */\nfunction getStablePath( path ) {\n\tconst splitted = path.split( '?' );\n\tconst query = splitted[ 1 ];\n\tconst base = splitted[ 0 ];\n\tif ( ! query ) {\n\t\treturn base;\n\t}\n\n\t// 'b=1&c=2&a=5'\n\treturn (\n\t\tbase +\n\t\t'?' +\n\t\tquery\n\t\t\t// [ 'b=1', 'c=2', 'a=5' ]\n\t\t\t.split( '&' )\n\t\t\t// [ [ 'b, '1' ], [ 'c', '2' ], [ 'a', '5' ] ]\n\t\t\t.map( ( entry ) => entry.split( '=' ) )\n\t\t\t// [ [ 'a', '5' ], [ 'b, '1' ], [ 'c', '2' ] ]\n\t\t\t.sort( ( a, b ) => a[ 0 ].localeCompare( b[ 0 ] ) )\n\t\t\t// [ 'a=5', 'b=1', 'c=2' ]\n\t\t\t.map( ( pair ) => pair.join( '=' ) )\n\t\t\t// 'a=5&b=1&c=2'\n\t\t\t.join( '&' )\n\t);\n}\n\nexport {paginateUrl, getPage, appendUrl, authoritiesMatch, hasValidProtocol, constructUrl, validateUrl, getStablePath};\n","(function() { module.exports = window[\"regeneratorRuntime\"]; }());","(function() { module.exports = window[\"wp\"][\"url\"]; }());"],"sourceRoot":""}